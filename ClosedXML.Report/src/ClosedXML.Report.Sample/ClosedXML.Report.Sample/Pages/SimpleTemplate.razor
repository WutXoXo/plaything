@page "/simple-template"

@using ClosedXML.Report.Sample.Services.Abstractions
@using ClosedXML.Report.Sample.Entities.Sqlite
@using ClosedXML.Report.Sample.Models

@inject IProductService productService

<h3>Product List</h3>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <a class="form-control btn btn-info" href="/download" target="_blank">Export All</a>
    <table class="table">
        <thead>
            <tr>
                <th>Barcode</th>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Manage</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Barcode</td>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@product.Quantity</td>
                    <td>
                        <a class="form-control btn btn-info" href="/download?id=@product.Id" target="_blank">Export</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<ProductEntity> products;

    protected override async Task OnInitializedAsync()
    {
        products = await productService.GetProductAsync();
    }
}
